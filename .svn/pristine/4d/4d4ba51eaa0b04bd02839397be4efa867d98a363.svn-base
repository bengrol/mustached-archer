<?php

class ClassePrecompte {
    private $idPrecompte;   private $nbJourTravaille;  private $nbFOAnnonce; private $nbFORecu;  private $nbFORetourne; private $nbFOValide;
    private $CAmois;  private $nbVente;  private $nbMBP; private $rembFrais;  private $primePalier;  private $primeAnimation; private $autrePrime; private $datePrecompte;
    private $nbArguBinome; private $nbArguPerso;  private $totalFO;
    
  private $comMBP; private $TxComCAHT; private $comArgusTxPlein; private $comArgusTxReduit; private $TxComDR;
  private $TxComAR; private $seuilComFO; private $maxFObinome; private $fixeManager; private $txTVA; private $comFraisFO;
 private  $conx; private $txComFraisFO;
 
 private $ObservPrimePalier;
 private $ObservRembFrais;
 private $ObservAutrePrime;
 private $idStatutPrecompteIndex;
         
         
    function __construct($id) {
        //echo 'var_dump ClassePrecompte ';
      //  echo 'classePrecompte';
      //  var_dump($id);
        $outil = new ClasseOutils();
        $this->conx = $outil->connection();
        
        $prepare = $this->conx->prepare("select * ,  DATE_FORMAT(`datePrecompte`, '%d/%m/%Y') as dateFormat "
                . "from `precompte` where `idPrecompte`=:id");
        $prepare->execute(array('id' => $id['id']));
        $ligne = $prepare->fetch(PDO::FETCH_OBJ); 
      
 //var_dump($ligne);

        $this->CAmois = floatval($ligne->CA_HT);
        $this->autrePrime= floatval($ligne->autrePrime);
        $this->datePrecompte=  $ligne->dateFormat;
        $this->idPrecompte=  intval($ligne->idPrecompte);
        $this->nbArguBinome= intval($ligne->nbArguBinome);
        $this->nbArguPerso= intval($ligne->nbArguPerso);
        $this->nbFOAnnonce= intval($ligne->nbFOannonce);
        $this->nbFORecu= intval($ligne->nbFOrecu);
        $this->nbFORetourne= intval($ligne->nbFOretour);
        $this->nbFOValide= $this->nbFORecu-$this->nbFORetourne;
        $this->nbJourTravaille= intval($ligne->nbJourDeclare);
        $this->nbMBP=  intval($ligne->nbMBP);
        $this->nbVente=  intval($ligne->nbVente);
        $this->primePalier=floatval($ligne->PrimePalier);
        $this->rembFrais=floatval($ligne->rembourseFrais);
        $this->totalFO=  ($this->nbArguBinome+$this->nbArguPerso)-$this->nbFORetourne;
        
        if($id["new" ]==ok ){
            $prepare = $this->conx->prepare("SELECT * FROM  `paramInit` where 1");
            $prepare->execute();
            $ligne = $prepare->fetch(PDO::FETCH_OBJ); 
        }   
        $this->comMBP = floatval($ligne->comMBP);
        $this->TxComCAHT = floatval($ligne->TxComCAHT);
        $this->comArgusTxPlein = floatval($ligne->comArgusTxPlein);
        $this->comArgusTxReduit = floatval($ligne->comArgusTxReduit);
        $this->TxComDR = floatval($ligne->TxComDR);
        $this->TxComAR = floatval($ligne->TxComAR);
        $this->seuilComFO = floatval($ligne->seuilComFO);
        $this->maxFObinome = floatval($ligne->maxFObinome);
        $this->fixeManager = floatval($ligne->fixeManager);
        $this->txTVA = floatval($ligne->txTVA);
        $this->comFraisFO= floatval($ligne->comFraisFO);
        $this->txComFraisFO=  floatval($ligne->txComFraisFO);
        
        $this->ObservPrimePalier = $ligne->ObservPrimePalier;
        $this->ObservRembFrais = $ligne->ObservRembFrais;
        $this->ObservAutrePrime = $ligne->ObservAutrePrime;
        $this->idStatutPrecompteIndex = $ligne->idStatutPrecompteIndex;

      
     //  var_dump($this);
      
        
    }
    public function checkParam($param) {
        foreach ($param as &$value) {
            if ($value == null) {
                $value = 'null';
            }
        }
        return $param;
    }

    public function createPrecompte($param) {
      //  echo'AVANT ';
      //  var_dump($param);
        $param = $this->checkParam($param);
      //  echo 'APRES';
      // var_dump($param);
        /*
        'ObservPrimePalier'
         'ObservRembFrais'
         'ObservAutrePrime'
         */
        
       $outil = new ClasseOutils();
       $query="INSERT INTO `precompte`(" 
               . "`datePrecompte` , `idSalarie`, `nbJourDeclare`, `nbFOannonce`, `nbFOrecu`, "
               . "`nbFOretour`, `nbArguBinome`,  `nbArguPerso`, `CA_HT`, `nbVente`, "
               . "`nbMBP`,`rembourseFrais`,`PrimePalier`, `PrimeAnimation`, `annulationHT`,`autrePrime`,`editable`,"
               . "`comMBP`, `TxComCAHT`, `comArgusTxPlein`, `comArgusTxReduit`, `TxComDR`, `TxComAR`,"
               . " `seuilComFO`, `maxFObinome`, `fixeManager`, `txTVA`, `comFraisFO`,"
               . " `idStatutPrecompteIndex` , `txComFraisFO`,"
               . "`ObservPrimePalier`, `ObservRembFrais`,`ObservAutrePrime`  "
               . ") VALUES ('"
               .$outil->getDateJour()."',".$param['id']."," .$param['nbJourDeclare'].", "
               .$param['nbFOannonce'].","  .$param['nbFOrecu'].", " .$param['nbFOretour'].","
               .$param['nbArguBinome'].", " .$param['nbArguPerso'].", ".$param['CA_HT'].", "
               .$param['nbVente'].", " .$param['nbMBP'].", " .$param['rembourseFrais'].", "
               .$param['PrimePalier'].", ".$param['PrimeAnimation'].", " 
               
               .$param['annulationHT']."," .$param['autrePrime'].","  .$param['editable'].","
               .$param['comMBP']."," .$param['TxComCAHT']."," .$param['comArgusTxPlein']."," 
               .$param['comArgusTxReduit']."," .$param['TxComDR']."," .$param['TxComAR'].","
               .$param['seuilComFO']."," .$param['maxFObinome'].",".$param['fixeManager'].","
               .$param['txTVA']."," .$param['comFraisFO'].", "
               .$param['idStatutPrecompteIndex']." , ".$param['txComFraisFO']." ,"
               .$param['ObservPrimePalier']." , ".$param['ObservRembFrais']." , ".$param['ObservAutrePrime']."   )";
      //  print_r($query);
        $outil->connection()->exec($query);
    }
    
     function updatePrecompte($param, $idprecompte) {
       
        //var_dump($param);
         
         
       $param = $this->checkParam($param);
      // echo'etape 2';
      //  echo 'APRES';
       
       $outil = new ClasseOutils();
      
       $query="UPDATE `precompte` SET "
               . " `datePrecompte` = '".$outil->getDateJour()."',"
               . " `idSalarie`= ".$param['id'].","
               . " `nbJourDeclare` = " .$param['nbJourDeclare'].","
               . " `nbFOannonce` = ".$param['nbFOannonce'].","
               . " `nbFOrecu` = ".$param['nbFOrecu'].","
               . " `nbFOretour` = ".$param['nbFOretour'].","
               . " `nbArguBinome` = ".$param['nbArguBinome'].","
               . " `nbArguPerso` = ".$param['nbArguPerso'].","
               . " `CA_HT` = ".$param['CA_HT'].","
               . " `nbVente` = ".$param['nbVente'].","
               . " `nbMBP` = ".$param['nbMBP'].","
               . " `rembourseFrais` = ".$param['rembourseFrais']." ,"
               . " `PrimePalier` = ".$param['PrimePalier']." ,"
               . " `PrimeAnimation` = ".$param['PrimeAnimation']." ,"
               . " `annulationHT` = ".$param['annulationHT'].","
               . " `autrePrime` = ".$param['autrePrime']." ,"
               . " `editable` = ".$param['editable'].","
               . " `comMBP` = ".$param['comMBP'].","
               . " `TxComCAHT` = ".$param['TxComCAHT'].","
               . " `comArgusTxPlein` = ".$param['comArgusTxPlein'].","
               . " `comArgusTxReduit` = ".$param['comArgusTxReduit'].","
               . " `TxComDR` = ".$param['TxComDR'].","
               . " `TxComAR` = ".$param['TxComAR'].","
               . " `seuilComFO` = ".$param['seuilComFO'].","
               . " `maxFObinome` = ".$param['maxFObinome'].","
               . " `fixeManager` = ".$param['fixeManager'].","
               . " `txTVA` = ".$param['txTVA'].","
               . " `comFraisFO` = ".$param['comFraisFO'].","
               . " `ObservPrimePalier`= '".$param['ObservPrimePalier']."' , "
               . " `ObservRembFrais` = '".$param['ObservRembFrais']."' ,"
               . " `ObservAutrePrime` = '".$param['ObservAutrePrime']."' ,"
               . " `idStatutPrecompteIndex` = ".$param['idStatutPrecompteIndex'];
     
      
       $prepare= $outil->connection()->prepare($query." WHERE `idPrecompte` = :id; ");
       
    //  print_r($prepare);
       $prepare->execute(array('id'=>$idprecompte));
        
    }
    
    
    public function getJson(){
        $outil = new ClasseOutils();  $this->conx = $outil->connection();
        $prepare = $this->conx->prepare("select * ,  DATE_FORMAT(`datePrecompte`, '%d/%m/%Y') as dateFormat "
                . "from `precompte` where `idPrecompte`=:id");
        $prepare->execute(array('id' => $this->idPrecompte));
        
        $obj = $prepare->fetch(PDO::FETCH_ASSOC);  
        //var_dump($obj);
      //    json_encode($obj);
//            var_dump($json_output);
        return json_encode($obj);
    }
    
    public function getIdPrecompte() {
        return $this->idPrecompte;
    }

    public function getNbJourTravaille() {
        return $this->nbJourTravaille;
    }

    public function getNbFOAnnonce() {
        return $this->nbFOAnnonce;
    }

    public function getNbFORecu() {
        return $this->nbFORecu;
    }

    public function getNbFORetourne() {
        return $this->nbFORetourne;
    }

    public function getNbFOValide() {
        return $this->nbFOValide;
    }

    public function getCAmois() {
        return $this->CAmois;
    }

    public function getNbVente() {
        return $this->nbVente;
    }

    public function getNbMBP() {
        return $this->nbMBP;
    }

    public function getRembFrais() {
        return $this->rembFrais;
    }
    public function getDatePrecompte() {
        return $this->datePrecompte;
    }

    public function setDatePrecompte($datePrecompte) {
        $this->datePrecompte = $datePrecompte;
    }

    public function getPrimePalier() {
        return $this->primePalier;
    }

    public function getAutrePrime() {
        return $this->autrePrime;
    }

    public function getNbArguBinome() {
        return $this->nbArguBinome;
    }

    public function getNbArguPerso() {
        return $this->nbArguPerso;
    }

    public function getTotalFO() {
        return $this->totalFO;
    }

    public function setIdPrecompte($idPrecompte) {
        $this->idPrecompte = $idPrecompte;
    }

    public function setNbJourTravaille($nbJourTravaille) {
        $this->nbJourTravaille = $nbJourTravaille;
    }

    public function setNbFOAnnonce($nbFOAnnonce) {
        $this->nbFOAnnonce = $nbFOAnnonce;
    }

    public function setNbFORecu($nbFORecu) {
        $this->nbFORecu = $nbFORecu;
    }

    public function setNbFORetourne($nbFORetourne) {
        $this->nbFORetourne = $nbFORetourne;
    }

    public function setNbFOValide($nbFOValide) {
        $this->nbFOValide = $nbFOValide;
    }

    public function setCAmois($CAmois) {
        $this->CAmois = $CAmois;
    }

    public function setNbVente($nbVente) {
        $this->nbVente = $nbVente;
    }

    public function setNbMBP($nbMBP) {
        $this->nbMBP = $nbMBP;
    }

    public function setRembFrais($rembFrais) {
        $this->rembFrais = $rembFrais;
    }

    public function setPrimePalier($primePalier) {
        $this->primePalier = $primePalier;
    }

    public function setAutrePrime($autrePrime) {
        $this->autrePrime = $autrePrime;
    }

    public function setNbArguBinome($nbArguBinome) {
        $this->nbArguBinome = $nbArguBinome;
    }

    public function setNbArguPerso($nbArguPerso) {
        $this->nbArguPerso = $nbArguPerso;
    }

    public function setTotalFO($totalFO) {
        $this->totalFO = $totalFO;
    }
    public function getPrimeAnimation() {
        return $this->primeAnimation;
    }

    public function getComMBP() {
        return $this->comMBP;
    }

    public function getTxComCAHT() {
        return $this->TxComCAHT;
    }

    public function getComArgusTxPlein() {
        return $this->comArgusTxPlein;
    }

    public function getComArgusTxReduit() {
        return $this->comArgusTxReduit;
    }

    public function getTxComDR() {
        return $this->TxComDR;
    }

    public function getTxComAR() {
        return $this->TxComAR;
    }

    public function getSeuilComFO() {
        return $this->seuilComFO;
    }

    public function getMaxFObinome() {
        return $this->maxFObinome;
    }

    public function getFixeManager() {
        return $this->fixeManager;
    }

    public function getTxTVA() {
        return $this->txTVA;
    }

    public function setPrimeAnimation($primeAnimation) {
        $this->primeAnimation = $primeAnimation;
    }

    public function setComMBP($comMBP) {
        $this->comMBP = $comMBP;
    }

    public function setTxComCAHT($TxComCAHT) {
        $this->TxComCAHT = $TxComCAHT;
    }

    public function setComArgusTxPlein($comArgusTxPlein) {
        $this->comArgusTxPlein = $comArgusTxPlein;
    }

    public function setComArgusTxReduit($comArgusTxReduit) {
        $this->comArgusTxReduit = $comArgusTxReduit;
    }

    public function setTxComDR($TxComDR) {
        $this->TxComDR = $TxComDR;
    }

    public function setTxComAR($TxComAR) {
        $this->TxComAR = $TxComAR;
    }

    public function setSeuilComFO($seuilComFO) {
        $this->seuilComFO = $seuilComFO;
    }

    public function setMaxFObinome($maxFObinome) {
        $this->maxFObinome = $maxFObinome;
    }

    public function setFixeManager($fixeManager) {
        $this->fixeManager = $fixeManager;
    }

    public function setTxTVA($txTVA) {
        $this->txTVA = $txTVA;
    }
    public function getComFraisFO() {
        return $this->comFraisFO;
    }

    public function setComFraisFO($comFraisFO) {
        $this->comFraisFO = $comFraisFO;
    }
    public function getIdStatutPrecompteIndex() {
        return $this->idStatutPrecompteIndex;
    }

    public function setIdStatutPrecompteIndex($idStatutPrecompteIndex) {
        $this->idStatutPrecompteIndex = $idStatutPrecompteIndex;
    }








       
    
    
    

}